generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task        task[]
}

model task {
  id                          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                        String        @db.VarChar(255)
  description                 String?       @db.VarChar(255)
  status                      String        @db.VarChar(50)
  assigned_to                 String?       @db.Uuid
  created_by                  String?       @db.Uuid
  organization_id             String?       @db.Uuid
  created_at                  DateTime      @default(now()) @db.Timestamp(6)
  updated_at                  DateTime      @default(now()) @db.Timestamp(6)
  user_task_assigned_toTouser user?         @relation("task_assigned_toTouser", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_task_created_byTouser  user?         @relation("task_created_byTouser", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization                organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                          String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                       String         @unique @db.VarChar(255)
  firstName                   String?        @db.VarChar(255)
  lastName                    String?        @db.VarChar(255)
  roq_user_id                 String         @db.VarChar(255)
  tenant_id                   String         @db.VarChar(255)
  created_at                  DateTime       @default(now()) @db.Timestamp(6)
  updated_at                  DateTime       @default(now()) @db.Timestamp(6)
  organization                organization[]
  task_task_assigned_toTouser task[]         @relation("task_assigned_toTouser")
  task_task_created_byTouser  task[]         @relation("task_created_byTouser")
}
